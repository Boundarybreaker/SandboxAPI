plugins {
    id 'java-platform'
    id 'maven-publish'
}
def ENV = System.getenv()

def releasesRepoUrl = "https://nexus.sandboxpowered.org/repository/maven-releases/"
def snapshotsRepoUrl = "https://nexus.sandboxpowered.org/repository/maven-snapshots/"

allprojects {
    def buildNumber = ENV.BUILD_NUMBER
    def snapshot = ENV.MAVEN_SNAPSHOT? '-SNAPSHOT' : ''
    version = "${project.api_version}${snapshot}"
    group = project.maven_group
}

archivesBaseName = 'platform'

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
        maven { url 'https://dl.bintray.com/sandboxpowered/Library' }
    }

    if (project.name != "base") {
        dependencies {
            api project(':base')
        }
    }

    ext.genOutputDir = file("$buildDir/generated/resources")
    def templateModJson = rootProject.file("template/module-fabric.mod.json")
    task generateFabricModJson {
        def outputFile = file("${project.ext.genOutputDir}/fabric.mod.json")
        outputs.file(outputFile)
        doLast {
            outputFile.text = templateModJson.text.replaceAll("module_version", "${project.version}").replaceAll("module_id", "sandbox-${project.name}")
        }
    }
    sourceSets.main.output.dir ext.genOutputDir, builtBy: generateFabricModJson

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version

                artifact jar
            }
        }

        repositories {
            maven {
                url = ENV.MAVEN_SNAPSHOT ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username ENV.MAVEN_SNAPSHOT ? ENV.MAVEN_SNAPSHOT : ENV.MAVEN_USER
                    password ENV.MAVEN_PASS
                }
            }
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    constraints {
        api project(":base")
        api project(":rendering")

        api project(":resources")
    }
}

publishing {
    publications {
        platform(MavenPublication) {
            groupId = project.maven_group
            artifactId = 'api'

            from components.javaPlatform
        }
    }

    repositories {
        maven {
            url = ENV.MAVEN_SNAPSHOT ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ENV.MAVEN_SNAPSHOT ? ENV.MAVEN_SNAPSHOT : ENV.MAVEN_USER
                password ENV.MAVEN_PASS
            }
        }
    }
}